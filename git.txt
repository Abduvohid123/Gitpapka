1.  apt-get install git == git dasturini o'rnatish

2.  git --version == git versiyasini ko'rish

3.  git config --global user.name "bu yerga foydalanuvchi  ismi yoziladi "

4.  git config --global user.email "123@gmail.com"

5.  git init == joriy papkani ishga tushiradi

6.  git status ==  papaka ichidagi fayllarni ro'yhatga qo'shilgan yoki qo'shilmaganini bildiradi


7.  git add 1.txt == fayl ro'yhatga qo'shildi

8.  git add . == bir yo'la papkadagi hamma fayllarni ro'yhatdan o'tkazadi

9.  git commit -m "izoh"

10. git commit -am "izoh2"   == birdaniga add va commit buyrug'i

11. git log == o'zgarishlarni ko'rsatadi

12. git log --author "Abduvohid"  == faqat shu foydalanuvchining o'zgarishlarini ko'rsatadi

13. git log --stat == batafsil malumot beradi

14. git log -1 == oxirgi bitta o'zgarish   yoki  git lig -1 --stat

15. git log -p == yanayam batafsil malumot beradi  => o'zgartirilgan yozuvlarni ham ko'rsatadi

16. git diff == ro'yhatdan o'tgan fayl bilan ro'yhatdan o'tmagan fayl o'rtasidagi farq

17. git diff --staged == add qilingan  va commit qilingan fayl o'rtasidagi farq

18. git checkout -- 1.txt  ==   commit qilingan faylni bitta oldingi holatga qaytaradi

19. git reset HEAD 1-txt == add qilingan faylni ortga qaytaradi

20. git remote add origin -> githubdagi repository manzili

21. git push -u origin master

          boshqa repositoryga ulash

22. git remote remove origin
23. git remote add origin -> githubdagi repository manzili  -> ulandi

24. agar git push -u origin master ishlamasa   ->  git push -f origin master  -> ishlaydi

25. git clone == boshqa papkaga githubdagi loyihani ko'chirish
bishqa papka ichida git clone -> githubdagi repository manzili  
 
26. git pull origin master ==  github dagi o'zgarishni local omborga ko'chiradi  

27. malumotlarni githubning o'zidan o'zgartirib keyin pull qilsa ham bo'ladi.

28. git fetch == pull dan farqi bor yani bunda local computerga malumot ulanmaydi 
lekin git diff master origin/master buyrug'i orqali o'zgarishni ko'rsa bo'ladi

29. git status --untracked-files=all == papkalar ichidagi o'zgarishlarni  ham ko'rsatadi

30. init qilingan papkada .ignore nomli fayl ochiladi va uning ichiga ro'yxatga fayl nomi yoziladi misol uchun 1.txt
       va bu fayl boshqa foydalanuvchilarga jo'natilmaydi git statusda ham ko'rinmaydi
       agar !1.txt deb yozilsa === bu faylni commit qilsa bo'ladi 
         *.txt == barcha txt fayllar statusda chiqmaydi 

31. git branch == barcha tarmoqlar nomlari

32. git branch test ==   test tarmog'i yaratildi

33. git checkout test ==  hozirgi tarmoq testga o'zgardi


34. git checkout -b test2== bir yo'la test2 ga o'zgardi va test2 branch yaratildi

35 git branch -D test2 == test2 branch o'chirildi

36. git merge test == master tarmog'i test tamog'i bilan birlashtirildi 

37. git   

